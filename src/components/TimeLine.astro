---
import { Calendar } from "lucide-astro";

// Nuevo modelo de datos para cada tipo de evento
const timeline = [
  // Evento general
  {
    type: "general",
    date: "2024-01-15",
    hour: "10:00",
    title: "Fundación del proyecto",
    description: "El proyecto comenzó oficialmente con la primera reunión del equipo fundador.",
    objectives: "Unir estudiantes interesados en tecnología.",
    keyResult: "Se formó el equipo base.",
    attendees: 50,
    speaker: "Dra. Ana Torres"
  },
  // Evento pasado/próximo por capítulo
  {
    type: "chapter-event",
    chapter: "RAS",
    date: "2024-02-20",
    hour: "14:00",
    title: "Taller de robótica",
    description: "Taller práctico sobre robótica.",
    objectives: "Introducir conceptos básicos.",
    keyResult: "5 robots construidos.",
    attendees: 30,
    speaker: "Ing. Carlos Ruiz"
  },
  // Proyecto de capítulo
  {
    type: "chapter-project",
    chapter: "WIE",
    title: "Proyecto de Innovación Social",
    description: "Aplicar tecnología para resolver problemas sociales.",
    committee: "Comité de Impacto Social"
  },
  // Evento recurrente
  {
    type: "recurring",
    startDate: "2024-04-01",
    endDate: "2024-04-30",
    title: "Mes de la Innovación",
    description: "Actividades y talleres durante todo el mes.",
    chapters: ["RAS", "IAS"]
  },
  // Evento próximo por capítulo
  {
    type: "chapter-event",
    chapter: "IAS",
    date: "2024-09-05",
    hour: "16:00",
    title: "Seminario sobre Inteligencia Artificial",
    description: "Seminario sobre IA y su impacto en la industria.",
    objectives: "Actualizar conocimientos en IA.",
    keyResult: "Participación de 2 expertos.",
    attendees: 40,
    speaker: "Dr. Juan Pérez"
  }
];

// Ordenar todos los eventos por fecha (usando date/startDate)
function getEventDate(e) {
  return e.date || e.startDate || "9999-12-31";
}
const sortedTimeline = [...timeline].sort((a, b) => getEventDate(a).localeCompare(getEventDate(b)));

// Colores y badges por tipo de evento
const eventStyles = {
  general: {
    border: "border-neon-blue",
    dot: "border-neon-blue",
    badge: "bg-neon-blue/10 text-neon-blue",
    label: "General"
  },
  "chapter-event": {
    border: "border-neon-green",
    dot: "border-neon-green",
    badge: "bg-neon-green/10 text-neon-green",
    label: "Capítulo"
  },
  "chapter-project": {
    border: "border-ieee-gold",
    dot: "border-ieee-gold",
    badge: "bg-ieee-gold/10 text-ieee-gold",
    label: "Proyecto"
  },
  recurring: {
    border: "border-neon-purple",
    dot: "border-neon-purple",
    badge: "bg-neon-purple/10 text-neon-purple",
    label: "Recurrente"
  }
};

---

<!-- Leyenda de tipos de eventos -->
<div class="flex flex-wrap gap-6 justify-center mb-10">
  <div class="flex items-center gap-2">
    <span class="inline-block w-4 h-4 rounded-full border-2 border-neon-blue bg-ieee-dark-surface"></span>
    <span class="px-2 py-1 rounded bg-neon-blue/10 text-neon-blue text-xs font-semibold">General</span>
  </div>
  <div class="flex items-center gap-2">
    <span class="inline-block w-4 h-4 rounded-full border-2 border-neon-green bg-ieee-dark-surface"></span>
    <span class="px-2 py-1 rounded bg-neon-green/10 text-neon-green text-xs font-semibold">Capítulo</span>
  </div>
  <div class="flex items-center gap-2">
    <span class="inline-block w-4 h-4 rounded-full border-2 border-ieee-gold bg-ieee-dark-surface"></span>
    <span class="px-2 py-1 rounded bg-ieee-gold/10 text-ieee-gold text-xs font-semibold">Proyecto</span>
  </div>
  <div class="flex items-center gap-2">
    <span class="inline-block w-4 h-4 rounded-full border-2 border-neon-purple bg-ieee-dark-surface"></span>
    <span class="px-2 py-1 rounded bg-neon-purple/10 text-neon-purple text-xs font-semibold">Recurrente</span>
  </div>
</div>

<!-- Renderizado: una sola línea de tiempo, diferenciando por color y badge -->
<section class="relative py-24 bg-ieee-dark-bg">
  <div class="max-w-5xl mx-auto px-6 lg:px-8">
    <h2 class="text-4xl sm:text-5xl font-bold text-ieee-dark-text text-center mb-16 animate-slide-up">
      Línea de Tiempo <span class="text-transparent bg-clip-text bg-gradient-to-r from-neon-blue via-neon-purple to-neon-pink">IEEE Uniandes</span>
    </h2>
    <!-- Leyenda aquí -->
    <ol class="relative animate-fade-in timeline-vertical-rounded">
      {sortedTimeline.map((event, index) => {
        const style = eventStyles[event.type] || eventStyles.general;
        return (
          <li class="mb-14 ml-6 relative">
            <div class={`absolute w-5 h-5 bg-ieee-dark-surface border-2 rounded-full left-[-12px] top-1/2 -translate-y-1/2 z-10 shadow-glow-blue ${style.dot}`}></div>
            <div class={`bg-ieee-dark-surface/60 backdrop-blur-md p-6 rounded-2xl border shadow-glow-blue hover:shadow-glow-purple transition duration-300 ${style.border}`}>
              <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-2 gap-2">
                <h3 class="text-xl font-semibold text-ieee-dark-text">{event.title}</h3>
                <span class="text-sm flex items-center space-x-1">
                  <Calendar size={16} class={style.badge.split(" ")[1]} />
                  <span>
                    {event.date ? event.date : `${event.startDate} - ${event.endDate}`}
                  </span>
                  {event.hour && <span class="text-ieee-dark-muted">{event.hour}</span>}
                </span>
              </div>
              <div class="flex flex-wrap gap-2 mb-2">
                <span class={`px-2 py-1 rounded text-xs font-semibold ${style.badge}`}>{style.label}</span>
                {event.chapter && (
                  <span class="px-2 py-1 rounded bg-neon-green/10 text-neon-green text-xs font-semibold">{event.chapter}</span>
                )}
                {event.chapters && event.chapters.map((chapter) => (
                  <span class="px-2 py-1 rounded bg-neon-green/10 text-neon-green text-xs font-semibold">{chapter}</span>
                ))}
                {event.committee && (
                  <span class="px-2 py-1 rounded bg-neon-blue/10 text-neon-blue text-xs font-semibold">{event.committee}</span>
                )}
              </div>
              <p class="text-ieee-dark-muted text-base">{event.description}</p>
              {/* Campos específicos por tipo */}
              {event.objectives && (
                <p class="text-xs text-neon-blue mt-2"><b>Objetivos:</b> {event.objectives}</p>
              )}
              {event.keyResult && (
                <p class="text-xs text-neon-purple mt-1"><b>Resultado clave:</b> {event.keyResult}</p>
              )}
              {event.attendees && (
                <p class="text-xs text-neon-green mt-1"><b>Asistentes:</b> {event.attendees}</p>
              )}
              {event.speaker && (
                <p class="text-xs text-ieee-gold mt-1"><b>Orador:</b> {event.speaker}</p>
              )}
            </div>
          </li>
        );
      })}
    </ol>
  </div>
</section>

<style>
  .bg-ieee-dark-bg {
    background: #0a0a0f;
  }
  .text-ieee-dark-text {
    color: #e2e8f0;
  }
  .text-ieee-dark-muted {
    color: #94a3b8;
  }
  .text-neon-blue {
    color: #00d4ff;
  }
  .text-neon-purple {
    color: #8b5cf6;
  }
  .text-neon-green {
    color: #10b981;
  }
  .text-ieee-gold {
    color: #FDB913;
  }
  .bg-ieee-dark-surface {
    background: #1a1a2e;
  }
  .timeline-vertical-rounded {
    border-left: 4px solid #00d4ff4d;
    box-shadow: 0 0 12px #00d4ff22;
    padding-left: 2px;
    border-top-left-radius: 16px;
    border-bottom-left-radius: 16px;
  }
  .border-neon-blue\/20 {
    border-color: #00d4ff33;
  }
  .shadow-glow-blue {
    box-shadow: 0 0 12px #00d4ff55;
  }
  .hover\:shadow-glow-purple:hover {
    box-shadow: 0 0 24px #8b5cf655;
  }
  .bg-ieee-dark-surface\/60 {
    background: rgba(26,26,46,0.6);
  }
  .backdrop-blur-md {
    backdrop-filter: blur(16px);
  }
  .rounded-2xl {
    border-radius: 1rem;
  }
  .animate-slide-up {
    animation: slideUp 0.8s cubic-bezier(.4,2,.3,1) both;
  }
  @keyframes slideUp {
    from { opacity: 0; transform: translateY(40px); }
    to { opacity: 1; transform: translateY(0); }
  }
  .animate-fade-in {
    animation: fadeIn 1.2s cubic-bezier(.4,2,.3,1) both;
  }
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
</style>
